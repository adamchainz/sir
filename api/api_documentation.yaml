---
Analytics:
  - endpoint: /api/v1.0/analytics/top_prefixes
    methods:
      - method: GET
        arguments:
          start_time: Mandatory. Datetime in unicode string following the format '%Y-%m-%dT%H:%M:%S'. Starting time of the range.
          end_time: Mandatory. Datetime in unicode string following the format '%Y-%m-%dT%H:%M:%S'. Ending time of the range.
          limit_prefixes: Optional. Number of top prefixes to retrieve.
          net_masks: Optional. List of prefix lengths to filter in or out.
          exclude_net_masks: Optional. If set to any value it will return prefixes with a prefix length not included in net_masks. If set to 0 it will return only prefixes with a prefix length included in net_masks. Default is 0.
        examples:
          - ?limit_prefixes=10&start_time=2015-07-13T14:00&end_time=2015-07-14T14:00
          - ?limit_prefixes=10&start_time=2015-07-13T14:00&end_time=2015-07-14T14:00&net_masks=20,24
          - ?limit_prefixes=10&start_time=2015-07-13T14:00&end_time=2015-07-14T14:00&net_masks=20,24&exclude_net_masks=1
        returns: A list of prefixes sorted by sum_bytes. The attribute sum_bytes is the amount of bytes consumed during the specified time.
        description: >
          Retrieves TOP prefixes sorted by the amount of bytes that they consumed during the specified period of time.


  - endpoint: /api/v1.0/analytics/top_asns
    methods:
      - method: GET
        arguments:
          start_time: Mandatory. Datetime in unicode string following the format '%Y-%m-%dT%H:%M:%S'. Starting time of the range.
          end_time: Mandatory. Datetime in unicode string following the format '%Y-%m-%dT%H:%M:%S'. Ending time of the range.
        examples:
          - ?start_time=2015-07-13T14:00&end_time=2015-07-14T14:00
        returns: A list of ASN's sorted by sum_bytes. The attribute sum_bytes is the amount of bytes consumed during the specified time.
        description: >
          Retrieves TOP ASN's sorted by the amount of bytes that they consumed during the specified period of time.

Variables:
  - endpoint: /api/v1.0/variables
    methods:
      - method: GET
        arguments: {}
        examples:
          - ''
        returns: A list of all the variables.
        description: >
          Retrieves all the variables in the system.
      - method: POST
        arguments:
          name: Name of the variable.
          content: Content of the variable.
          category: Category of the variable.
          extra_vars: Use this field to add extra data to your variable. It is recommended to use a JSON string
        examples: []
        returns: The variable that was just created
        description: >
          You can create a variable from the CLI with curl like this: <pre><code>curl -i -H "Content-Type: application/json" -X POST -d '{"name": "test_var", "content": "whatever", "category": "development", "extra_vars": {"ads": "qwe", "asd": "zxc"}}' http://127.0.0.1:5000/api/v1.0/variables</code></pre>
  - endpoint: /api/v1.0/variables/categories
    methods:
      - method: GET
        arguments: {}
        examples:
          - ''
        returns: A list of all the categories.
        description: >
          Retrieves all the categories in the system.
  - endpoint: /api/v1.0/variables/categories/<category>
    methods:
      - method: GET
        arguments:
          <category>: Category you want to query
        examples:
          - ''
        returns: A list of variables belonging to <category>.
        description: >
          Retrieves all the variables the belong to &ltcategory&gt in the system.
  - endpoint: /api/v1.0/variables/categories/<category>/<name>
    methods:
      - method: GET
        arguments:
          <category>: Category of the variable you want to retrieve.
          <name>: Name of the variable you want to retrieve.
        examples:
          - ''
        returns: A list of variables belonging to <category>.
        description: >
          Retrieves the variable with &ltname&gt and &ltcategory&gt.
      - method: PUT
        arguments:
          <category>: Category of the variable you want to modify.
          <name>: Name of the variable you want to modify.
          name: Optional. New name.
          content: Optional. New content.
          category: Optional. New category.
          extra_vars: Optional. New extra_vars.
        examples:
          - ''
        returns: The variable with the new data.
        description: >
          This API call allows you to modify all of some of the values of a variable. For example, you can update the <em>name</em> and the <em>extra_vars</em> of a variable with the following command:
          <pre><code>
          curl -i -H "Content-Type: application/json" -X PUT -d '{"name": "test_varc", "extra_vars": "{'my_param1': 'my_value1', 'my_param2': 'my_value2'}"}' http://127.0.0.1:5000/api/v1.0/variables/categories/development/test_vara
          HTTP/1.0 200 OK
          Content-Type: application/json
          Content-Length: 358
          Server: Werkzeug/0.10.4 Python/2.7.8
          Date: Tue, 21 Jul 2015 10:16:22 GMT

          {
            "meta": {
              "error": false,
              "length": 1,
              "request_time": 0.0055
            },
            "parameters": {
              "categories": "development",
              "name": "test_vara"
            },
            "result": [
              {
                "category": "development",
                "content": "whatever",
                "extra_vars": "{my_param1: my_value1, my_param2: my_value2}",
                "name": "test_varc"
              }
            ]
            }
            </code></pre>
      - method: DELETE
        arguments:
          <category>: Category of the variable you want to delete.
          <name>: Name of the variable you want to delete.
        examples:
          - ''
        returns: An empty list
        description: >
          Deletes a variable. For example:
          <pre><code>
          curl -i -X DELETE http://127.0.0.1:5000/api/v1.0/variables/categories/deveopment/test_vara
          HTTP/1.0 200 OK
          Content-Type: application/json
          Content-Length: 183
          Server: Werkzeug/0.10.4 Python/2.7.8
          Date: Tue, 21 Jul 2015 10:17:27 GMT

          {
            "meta": {
              "error": false,
              "length": 0,
              "request_time": 0.0016
            },
            "parameters": {
              "categories": "deveopment",
              "name": "test_vara"
            },
            "result": []
          }
          </code></pre>

Pmacct:
  - endpoint: /api/v1.0/pmacct/dates
    methods:
      - method: GET
        arguments: {}
        examples:
          - ''
        returns: A list of all the available dates in the system
        description: >
          Retrieves all the available dates in the system.
  - endpoint: /api/v1.0/pmacct/flows
    methods:
      - method: GET
        arguments:
          start_time: Mandatory. Datetime in unicode string following the format '%Y-%m-%dT%H:%M:%S'. Starting time of the range.
          end_time: Mandatory. Datetime in unicode string following the format '%Y-%m-%dT%H:%M:%S'. Ending time of the range.
        examples:
          - ?limit_prefixes=10&start_time=2015-07-14T14:00&end_time=2015-07-14T14:01
          - ?limit_prefixes=10&start_time=2015-07-13T14:00&end_time=2015-07-14T14:00
        returns: A list of all the available dates in the system
        description: >
          Retrieves all the available dates in the system.
  - endpoint: /api/v1.0/pmacct/bgp_prefixes
    methods:
      - method: GET
        arguments:
          date: Mandatory. Datetime in unicode string following the format '%Y-%m-%dT%H:%M:%S'.
        examples:
          - ?date=2015-07-16T11:00:01
        returns: A list of all the available BGP prefixes in the system
        description: >
          Retrieves all the BGP prefixes in the system.
